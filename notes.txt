http://infocenter.arm.com/help/topic/com.arm.doc.dui0204j/Cacigaci.html
http://www.coranac.com/tonc/text/asm.htm

TODO LIST:
- atoi (for pro2)
- convert int to long
- Do long math

Curly Braces is a list!

PUSH is just a synonym for STMDB using sp as the base register. The DB indicates the 'decrement-before' addressing mode.
     PUSH {lr} == STMDB sp!, {lr}
     The ! will update the sp
     
INSTRUCTIONS I DON'T UNDERSTAND:
	     Q{D}ADD Rd, Rm, Rn
	     Q{D}SUB Rd, Rm, Rn
	     SUBS PC, LR, #<imm8>
	     All Saturate Instructions
	     EOR{S} Rd, Rn, <Operand2>
	     
TWO-LETTER CONDITION CODES:			 
	   - AL : Always (This is the default)
	   - NV : Never (Inverse of always)
	   - EQ : Equal				         Z
	   - NE : Not Equal (Inverse of equal)          !Z
	   - VS : Overflow Set			            V
	   - VC : Overflow Clear (Inverse of VS)           !V
	   - MI : Minus	   	 	     	               N
	   - PL : Plus (Inverse of MI)                        !N
	   - CS : Carry Set				          C
	   - CC : Carry Clear (Inverse of CS)                    !C
	   - HI : Higher                                !Z        C
	   - LS : Lower or same                          Z           |          !C
	   - GE : Greater than or equal to                 !V !N     |     V  N
	   - LT : Less than (Inverse of GE)                 V !N     |    !V  N
	   - GT : Greater than                          !Z !V !N     | !Z  V  N
	   - LE : Less than or equal to (Inverse of GT)     V !N     |    !V  N    |  Z  V !N     |  Z !V  N
	   
.macro macroname [argument{,arguments}]
.byte  - char  (8  bit)
.2byte - short (16 bit) 
.4byte - int   (32 bit) 
.8byte - long  (64 bit)

.hword .short .word - can be the same
.word .int    - can be the same
.int .long    - can be the same

.ifb
.else
.endif
.ifnb
.endm - end macro
.rodata - section
.asciz


.text
	- Section
	- 


.data
	- Section
	- Program copies all the data found in here to RAM when the program starts up.
	- These can be binary values, strings, pointers, etc.
	
.bss
	- Section
	- Uninitialized global variables
.space
.align
.balign
.section - section
.ramcode
.func - Tells the beginning of a function (but it's used for debugging purposes)
.endfunc
.type


Labels:
	- lines ending in a colon

Instructions:
	- lines the program will execute

Directives:
	- "hints" to the assembler

ARM is RISC (Reduced Instrcution Set Computer)

A binary floating point number is an approximate representation of a real number with three parts: sign, mantissa and exponent
  - Sign: 0 or 1, 1 is negative and 0 is positive
  - Mantissa: Represents a fractional magnitude. Numbers are normalized. Which means that the integer part is adjusted to always be one.
    	      
Registers across CPU modes
usr sys svc      abt      und      irq      fiq
    		    R0
	    	    R1
	    	    R2
	    	    R3
	    	    R4
	    	    R5
	    	    R6
	    	    R7
	    	    R8			    R8_fiq
	    	    R9			    R9_fiq
	    	    R10			    R10_fiq
	    	    R11			    R11_fiq
	    	    R12			    R12_fiq
  R13   R13_svc  R13_abt  R13_und  R13_irq  R13_fiq
  R14   R14_svc  R14_abt  R14_und  R14_irq  R14_fiq
  		    R15
		    CPSR
	SPSR_svc SPSR_abt SPSR_und SPSR_irq SPSR_fiq

Number of Registers: r0 - r12 (13) + r8_fiq - r14_fiq (7) + r13* - 14* (10) + r15 (1) + cpsr (1) + spsr* (5) = 37

However, we usually just care about the usr/sys registers: r0 - r15 (16) + CPSR (1) = 17


